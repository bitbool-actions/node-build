name: "node-build"
description: "build node app"
inputs: 
  USE_YARN:
    required: false
    default: "true"
  NODE_VERSION:
    required: true
  CI:
    required: false
    default: "true"    
runs:
  using: "composite"
  steps:


    - name: Use Node.js
      uses: actions/setup-node@v3
      with:
        node-version: ${{ inputs.NODE_VERSION }}
        registry-url: 'https://npm.pkg.github.com'


#yarn
    - name: Get yarn cache directory path
      shell: bash
      id: yarn-cache-dir-path
      run: echo "::set-output name=dir::$(yarn cache dir)"
      if: ${{ inputs.USE_YARN == 'true' }}

    - uses: actions/cache@v3
      id: yarn-cache # use this to check for `cache-hit` (`steps.yarn-cache.outputs.cache-hit != 'true'`)
      with:
        path: ${{ steps.yarn-cache-dir-path.outputs.dir }}
        key: ${{ runner.os }}-yarn-${{ hashFiles('**/yarn.lock') }}
        restore-keys: |
           ${{ runner.os }}-yarn-
      if: ${{ inputs.USE_YARN == 'true' }}

    - name: yarn install
      shell: bash
      run: yarn install --prefer-offline
      if: ${{ inputs.USE_YARN == 'true' }}

#npm
    - name: Cache Node.js modules
      uses: actions/cache@v3
      with:
        path: .npm
        key: ${{ runner.OS }}-node-${{ hashFiles('**/package-lock.json') }}
        restore-keys: |
          ${{ runner.OS }}-node-
      if: ${{ inputs.USE_YARN == 'false' }}

    - name: npm ci
      shell: bash
      run: npm ci --cache .npm --prefer-offline 
      if: ${{ inputs.USE_YARN == 'false' }}


#build
    - name: npm build
      shell: bash
      run: npm run build
      env:
        CI: "${{ inputs.CI }}"
